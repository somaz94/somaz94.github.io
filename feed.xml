<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Somaz Tech Blog</title>
    <description>DevOps engineer&apos;s tech blog. AWS, Kubernetes, Infrastructure as Code (IaC), Share experience and knowledge related to CI/CD and cloud native technology. It mainly deals with cloud infrastructure deployment, automation, monitoring, and security.</description>
    <link>https://somaz94.github.io/</link>
    <atom:link href="https://somaz94.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 17 Jan 2025 15:19:17 +0900</pubDate>
    <lastBuildDate>Fri, 17 Jan 2025 15:19:17 +0900</lastBuildDate>
    <generator>Jekyll v3.10.0</generator>
    
      <item>
        <title>ELK Stack Implementation Guide</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;This guide explores the implementation of ELK Stack (Elasticsearch, Logstash, Kibana) for log collection, processing, and analysis.&lt;/p&gt; &lt;h3 id=&quot;-what-is-elk-stack&quot;&gt;üîç What is ELK Stack?&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;ELK Stack combines three main components: Elasticsearch, Logstash, and Kibana. Recently, EFK Stack (with Fluentd) has also become popular as a lighter alternative.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;Ô∏è-architectureelk-stack&quot;&gt;üèóÔ∏è Architecture(ELK Stack)&lt;/h3&gt; &lt;h4 id=&quot;-log-pipeline&quot;&gt;üìù Log Pipeline:&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Filebeat(log collector) ‚Üí Logstash(log processor) ‚Üí Elasticsearch(storage) ‚Üê Kibana(visualization)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;-metric-pipeline&quot;&gt;üìä Metric Pipeline:&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Metricbeat(metric collector) ‚Üí Elasticsearch(storage) ‚Üê Kibana(visualization)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;-apm-pipeline&quot;&gt;üîÑ APM Pipeline:&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Applications(APM agents) ‚Üí APM Server...</description>
        <pubDate>Sat, 18 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/monitoring/elk-stack/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/monitoring/elk-stack/</guid>
        
        <category>elasticsearch</category>
        
        <category>logstash</category>
        
        <category>kibana</category>
        
        <category>monitoring</category>
        
        <category>MONITORING</category>
      </item>
    
      <item>
        <title>IPVS vs iptables in Kubernetes</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;concepts-of-ipvs-and-iptables&quot;&gt;Concepts of IPVS and iptables&lt;/h2&gt; &lt;h3 id=&quot;1Ô∏è‚É£-iptables-ip-table-rules&quot;&gt;1Ô∏è‚É£ iptables (IP table rules)&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iptables&lt;/code&gt; is a packet filtering and NAT (Network Address Translation) framework built into the Linux kernel. It defines rules that packets must pass through and decides whether to allow, deny, forward, or modify network traffic.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;How it works in Kubernetes:&lt;/strong&gt;&lt;br /&gt; Kubernetes uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iptables&lt;/code&gt; to route traffic between services and Pods. It implements round-robin load balancing by selecting backend Pods sequentially.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Advantages of iptables:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;‚úÖ &lt;strong&gt;Stability:&lt;/strong&gt; Mature and widely used on Linux systems.&lt;br /&gt; ‚úÖ &lt;strong&gt;Simplicity:&lt;/strong&gt; Easy to...</description>
        <pubDate>Fri, 17 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/kubernetes/ipvs-iptables/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/kubernetes/ipvs-iptables/</guid>
        
        <category>kubernetes</category>
        
        <category>ipvs</category>
        
        <category>iptables</category>
        
        <category>KUBERNETES</category>
      </item>
    
      <item>
        <title>Understanding IPsec vs SSL/TLS - Network Security Protocols</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;IPsec and SSL/TLS are both protocols used for securing network traffic, operating at different layers of the network stack.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;-ipsec-internet-protocol-security&quot;&gt;üîí IPsec (Internet Protocol Security)&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Protocol suite for IP communication security&lt;/li&gt; &lt;li&gt;Authenticates and encrypts IP packets&lt;/li&gt; &lt;li&gt;Operates at network layer&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Network Layer Security&lt;/li&gt; &lt;li&gt;Encryption and Authentication&lt;/li&gt; &lt;li&gt;Transport and Tunnel modes&lt;/li&gt; &lt;li&gt;VPN support&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;-ssltls-secure-sockets-layertransport-layer-security&quot;&gt;üîê SSL/TLS (Secure Sockets Layer/Transport Layer Security)&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Protocol for securing computer communications&lt;/li&gt; &lt;li&gt;Originally designed for HTTP traffic&lt;/li&gt; &lt;li&gt;Operates at session layer&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Session Layer...</description>
        <pubDate>Fri, 10 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/ipsec-ssl/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/ipsec-ssl/</guid>
        
        <category>security</category>
        
        <category>ipsec</category>
        
        <category>ssl</category>
        
        <category>tls</category>
        
        <category>vpn</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding Linux Standard Streams - stdin, stdout, and stderr</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Linux standard streams (stdin, stdout, and stderr) are fundamental channels for managing input and output in terminal or command-line interfaces.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;-standard-input-stdin&quot;&gt;üì• Standard Input (stdin)&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;File Descriptor: 0&lt;br /&gt; Default Source: Keyboard&lt;br /&gt; Purpose: Receives input for commands&lt;/p&gt; &lt;/blockquote&gt; &lt;h4 id=&quot;examples&quot;&gt;Examples&lt;/h4&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Basic stdin usage&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Waits for keyboard input&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Redirect file to stdin&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &amp;lt; file.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h3 id=&quot;-standard-output-stdout&quot;&gt;üì§ Standard Output (stdout)&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;File Descriptor: 1&lt;br /&gt; Default Destination: Terminal screen&lt;br /&gt; Purpose: Displays command output&lt;/p&gt; &lt;/blockquote&gt; &lt;h4...</description>
        <pubDate>Thu, 09 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/linux-streams/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/linux-streams/</guid>
        
        <category>linux</category>
        
        <category>stdin</category>
        
        <category>stdout</category>
        
        <category>stderr</category>
        
        <category>streams</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding Web Rendering Methods - CSR, SSR, SSG, and ISR</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Web rendering is the process of generating visual content from web code, including HTML, CSS, and JavaScript. Let‚Äôs explore the four main rendering approaches: CSR, SSR, SSG, and ISR.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;-client-side-rendering-csr&quot;&gt;üíª Client-Side Rendering (CSR)&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Process:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Browser downloads minimal HTML&lt;/li&gt; &lt;li&gt;JavaScript loads and executes&lt;/li&gt; &lt;li&gt;UI renders dynamically&lt;/li&gt; &lt;li&gt;Handles user interactions&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;h4 id=&quot;advantages&quot;&gt;Advantages&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Rich interactivity&lt;/li&gt; &lt;li&gt;Reduced server load&lt;/li&gt; &lt;li&gt;Fast subsequent navigation&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;disadvantages&quot;&gt;Disadvantages&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Slow initial load&lt;/li&gt; &lt;li&gt;Poor SEO performance&lt;/li&gt; &lt;li&gt;JavaScript dependency&lt;/li&gt; &lt;/ul&gt; &lt;div style=&quot;width: 100%; margin: auto; margin-top: 40px;&quot;&gt; &lt;div class=&quot;mermaid&quot;&gt; sequenceDiagram participant User participant Browser...</description>
        <pubDate>Thu, 09 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/rendering-types/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/rendering-types/</guid>
        
        <category>rendering</category>
        
        <category>csr</category>
        
        <category>ssr</category>
        
        <category>ssg</category>
        
        <category>isr</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>3-Tier Architecture and Modern Web Development</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Traditional 3-tier architecture divides applications into presentation, application, and data layers. Modern web development has evolved this concept, particularly with cloud technologies.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;Ô∏è-traditional-3-tier-architecture&quot;&gt;üèóÔ∏è Traditional 3-Tier Architecture&lt;/h3&gt; &lt;p&gt;A structured approach to web development, dividing responsibilities into distinct layers.&lt;/p&gt; &lt;h4 id=&quot;1-presentation-layer-client-tier&quot;&gt;1. &lt;strong&gt;Presentation Layer (Client Tier)&lt;/strong&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;üñ•Ô∏è User Interface&lt;/li&gt; &lt;li&gt;üìä Data Presentation&lt;/li&gt; &lt;li&gt;üñ±Ô∏è User Interaction&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;2-application-layer-business-logic-tier&quot;&gt;2. &lt;strong&gt;Application Layer (Business Logic Tier)&lt;/strong&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;‚öôÔ∏è Business Logic Processing&lt;/li&gt; &lt;li&gt;üîÑ Command Coordination&lt;/li&gt; &lt;li&gt;üìÇ Data Processing&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;3-data-layer-data-tier&quot;&gt;3. &lt;strong&gt;Data Layer (Data Tier)&lt;/strong&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;üóÑÔ∏è Database Management&lt;/li&gt; &lt;li&gt;üíæ Data Storage&lt;/li&gt; &lt;li&gt;üîç Data Retrieval&lt;/li&gt; &lt;/ul&gt;...</description>
        <pubDate>Wed, 08 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/3tier-architecture/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/3tier-architecture/</guid>
        
        <category>architecture</category>
        
        <category>web</category>
        
        <category>development</category>
        
        <category>3tier</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Synchronous and Asynchronous Processing</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://x.com/boyney123/status/1617505248821809153&quot;&gt;image reference link&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Understanding synchronous and asynchronous processing is fundamental in software development, especially in how programs handle tasks.&lt;/p&gt; &lt;h3 id=&quot;-synchronous-processing&quot;&gt;üí´ Synchronous Processing&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Key Characteristics&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Blocking: Tasks complete one at a time&lt;/li&gt; &lt;li&gt;Linear Execution: Sequential order&lt;/li&gt; &lt;li&gt;Simplicity: Easier to program and debug&lt;/li&gt; &lt;li&gt;Use Cases: File operations, database transactions&lt;/li&gt; &lt;/ol&gt; &lt;/blockquote&gt; &lt;h4 id=&quot;-synchronous-example&quot;&gt;üìù Synchronous Example&lt;/h4&gt; &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;r&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Reading &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;...&quot;&lt;/span&gt;&lt;span...</description>
        <pubDate>Wed, 08 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/sync-async/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/sync-async/</guid>
        
        <category>python</category>
        
        <category>async</category>
        
        <category>sync</category>
        
        <category>programming</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Single Sign-On (SSO)</title>
        <description>&lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://www.authgear.com/post/customer-sso/&quot;&gt;image reference link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Single Sign-On (SSO) enables users to access multiple systems with a single authentication process.&lt;/p&gt; &lt;h3 id=&quot;-what-is-sso&quot;&gt;üí° What is SSO?&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;SSO is an authentication scheme that allows users to access multiple applications with one set of credentials. It:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Improves user experience&lt;/li&gt; &lt;li&gt;Reduces authentication complexity&lt;/li&gt; &lt;li&gt;Enhances security&lt;/li&gt; &lt;li&gt;Centralizes access management&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;-key-benefits&quot;&gt;‚ú® Key Benefits&lt;/h3&gt; &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Enhanced User Experience - Single login for multiple services - Reduced password management 2. Improved Security - Centralized authentication - Stronger password policies 3. Efficient Resource...</description>
        <pubDate>Tue, 07 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/sso/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/sso/</guid>
        
        <category>sso</category>
        
        <category>oauth</category>
        
        <category>saml</category>
        
        <category>oidc</category>
        
        <category>authentication</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Network Address Translation (NAT)</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Network Address Translation (NAT) is a crucial networking technology that enables address translation between private and public networks.&lt;/p&gt; &lt;h3 id=&quot;-what-is-nat&quot;&gt;üí° What is NAT?&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;NAT converts network addresses from one type to another, primarily used to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Solve IP address shortage&lt;/li&gt; &lt;li&gt;Protect internal networks&lt;/li&gt; &lt;li&gt;Enable multiple devices to share one public IP&lt;/li&gt; &lt;/ul&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;-nat-types&quot;&gt;üîÑ NAT Types&lt;/h3&gt; &lt;h4 id=&quot;static-nat&quot;&gt;Static NAT&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;One-to-one mapping&lt;/li&gt; &lt;li&gt;Private to public IP&lt;/li&gt; &lt;li&gt;Used for web servers&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;dynamic-nat&quot;&gt;Dynamic NAT&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Pool of private IPs to pool of public IPs&lt;/li&gt; &lt;li&gt;No guaranteed consistent...</description>
        <pubDate>Tue, 07 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/nat/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/nat/</guid>
        
        <category>networking</category>
        
        <category>nat</category>
        
        <category>snat</category>
        
        <category>dnat</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Cloud Computing</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Cloud computing enables users to access computing resources over the internet, eliminating the need for physical infrastructure ownership.&lt;/p&gt; &lt;h3 id=&quot;-key-benefits&quot;&gt;üí° Key Benefits&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;üìà Scalability: Easily scale up or down based on demand&lt;/li&gt; &lt;li&gt;üí∞ Cost-Efficiency: Pay only for resources used&lt;/li&gt; &lt;li&gt;üåê Accessibility: Access from anywhere with internet&lt;/li&gt; &lt;li&gt;üîÑ Flexibility: Choose from various service options&lt;/li&gt; &lt;li&gt;üîß Maintenance: Provider handles updates and maintenance&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;Ô∏è-cloud-deployment-models&quot;&gt;‚òÅÔ∏è Cloud Deployment Models&lt;/h3&gt; &lt;h4 id=&quot;public-vs-private-cloud&quot;&gt;Public vs Private Cloud&lt;/h4&gt; &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Public Cloud: - Shared infrastructure - Multiple tenants - Internet accessible - Examples:...</description>
        <pubDate>Mon, 06 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/cloud-computing/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/cloud-computing/</guid>
        
        <category>cloud</category>
        
        <category>aws</category>
        
        <category>azure</category>
        
        <category>gcp</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding Processes and Threads</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Understanding the differences between processes and threads is crucial for software development. Let‚Äôs explore these concepts in detail.&lt;/p&gt; &lt;h3 id=&quot;-program-vs-process&quot;&gt;üí° Program vs Process&lt;/h3&gt; &lt;p&gt;A program is a set of instructions stored on disk, while a process is a running instance of a program. Key differences:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Program is static, Process is dynamic&lt;/li&gt; &lt;li&gt;Program is code, Process is code in execution&lt;/li&gt; &lt;li&gt;Multiple processes can run from the same program&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;-process-vs-thread&quot;&gt;üîÑ Process vs Thread&lt;/h3&gt; &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dkcm26aem/image/upload/v1737017116/process-thread_cuzjcm.png&quot; alt=&quot;HTTPS&quot; width=&quot;600&quot; /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://medium.com/javarevisited/most-people-in-tech-cant-answer-the-process-vs-thread-question-correctly-079635291e14&quot;&gt;image reference link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;process&quot;&gt;Process&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Independent...</description>
        <pubDate>Mon, 06 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/process-thread/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/process-thread/</guid>
        
        <category>process</category>
        
        <category>thread</category>
        
        <category>operating-system</category>
        
        <category>concurrency</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding Kubernetes Components and Pod Creation</title>
        <description>&lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/ko/docs/concepts/overview/components/&quot;&gt;image reference link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Let‚Äôs explore Kubernetes components and understand how pods are created within a cluster.&lt;/p&gt; &lt;h3 id=&quot;-why-kubernetes&quot;&gt;üí° Why Kubernetes?&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;Kubernetes offers several key benefits:&lt;/p&gt; &lt;/blockquote&gt; &lt;ul&gt; &lt;li&gt;üîÑ Container Orchestration&lt;/li&gt; &lt;li&gt;üìà Scalability&lt;/li&gt; &lt;li&gt;‚öñÔ∏è Load Balancing&lt;/li&gt; &lt;li&gt;üî® High Availability&lt;/li&gt; &lt;li&gt;üöÄ Automated Rollouts and Rollbacks&lt;/li&gt; &lt;li&gt;üîç Service Discovery&lt;/li&gt; &lt;li&gt;üíæ Storage Orchestration&lt;/li&gt; &lt;li&gt;üîê Secret and Configuration Management&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;Ô∏è-kubernetes-components&quot;&gt;üèóÔ∏è Kubernetes Components&lt;/h3&gt; &lt;h4 id=&quot;control-plane-components&quot;&gt;Control Plane Components&lt;/h4&gt; &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. kube-apiserver - Central control point - Provides Kubernetes API - Handles Pod creation requests 2. etcd -...</description>
        <pubDate>Sun, 05 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/kubernetes-components-and-work/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/kubernetes-components-and-work/</guid>
        
        <category>kubernetes</category>
        
        <category>container</category>
        
        <category>orchestration</category>
        
        <category>pod</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding HTTP Methods and Status Codes</title>
        <description>&lt;ul&gt; &lt;li&gt;&lt;a href=&quot;https://raonctf.com/essential/study/web/http&quot;&gt;image reference link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;HTTP methods define how clients communicate with web servers. Let‚Äôs explore each method and their corresponding status codes.&lt;/p&gt; &lt;div style=&quot;width: 100%; margin: auto; margin-top: 40px;&quot;&gt; &lt;!-- ‚úÖ ÏúÑÏ™Ω Ïó¨Î∞± Ï∂îÍ∞Ä --&gt; &lt;div class=&quot;mermaid&quot;&gt; graph TD; A[üåê HTTP Request Methods] --&amp;gt; B[üîç GET Request]; A --&amp;gt; C[üìù POST Request]; A --&amp;gt; D[üìÑ HEAD Request]; B --&amp;gt; B1[üí° Used when typing URL in browser]; B1 --&amp;gt; B2[üìÑ GET /cat.png]; B2 --&amp;gt; B3[üì¶ 200 OK \n Content-Type: image/png]; B3 --&amp;gt; B4[üñºÔ∏è Display Cat Image]; C --&amp;gt; C1[üì§ Submitting a form];...</description>
        <pubDate>Sun, 05 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/understanding-http-method/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/understanding-http-method/</guid>
        
        <category>http</category>
        
        <category>api</category>
        
        <category>rest</category>
        
        <category>web</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding Virtualization Technologies</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Virtualization is a technology that creates virtual versions of physical devices or resources within a system. Let‚Äôs explore different types of virtualization and their implementations.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;-types-of-virtualization&quot;&gt;üîç Types of Virtualization&lt;/h3&gt; &lt;h4 id=&quot;Ô∏è-server-virtualization&quot;&gt;üñ•Ô∏è Server Virtualization&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Host-based (VMware, VirtualBox)&lt;/li&gt; &lt;li&gt;Bare-metal (Xen, KVM)&lt;/li&gt; &lt;li&gt;Container (Docker)&lt;/li&gt; &lt;li&gt;Type 1 Hypervisor (Direct on hardware)&lt;/li&gt; &lt;li&gt;Type 2 Hypervisor (Runs on OS)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;-storage-virtualization&quot;&gt;üíæ Storage Virtualization&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;SAN (Storage Area Network)&lt;/li&gt; &lt;li&gt;NAS (Network Attached Storage)&lt;/li&gt; &lt;li&gt;DAS (Direct Attached Storage)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;-network-virtualization&quot;&gt;üåê Network Virtualization&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;VPN (Virtual Private Network)&lt;/li&gt; &lt;li&gt;VLAN (Virtual Local Area Network)&lt;/li&gt; &lt;li&gt;VXLAN (Virtual Extensible...</description>
        <pubDate>Sat, 04 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/virtualization/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/virtualization/</guid>
        
        <category>virtualization</category>
        
        <category>cloud</category>
        
        <category>containers</category>
        
        <category>networking</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding HTTP and HTTPS Protocols</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;HTTP (Hypertext Transfer Protocol) and HTTPS (Hypertext Transfer Protocol Secure) are protocols for transmitting data over the internet. Let‚Äôs explore their differences and implementation.&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h3 id=&quot;-http-hypertext-transfer-protocol&quot;&gt;üåê HTTP (Hypertext Transfer Protocol)&lt;/h3&gt; &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dkcm26aem/image/upload/v1736996284/http_hl1dtl.png&quot; alt=&quot;HTTP&quot; width=&quot;100&quot; /&gt;&lt;/p&gt; &lt;h4 id=&quot;-concept&quot;&gt;üìù Concept&lt;/h4&gt; &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Protocol defining data transfer between web browsers and servers - Supports HTML, images, video, audio, and other content types - Transmitted as unencrypted text (security vulnerable) &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h4 id=&quot;Ô∏è-working-process&quot;&gt;‚öôÔ∏è Working Process&lt;/h4&gt; &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Client sends HTTP request message: - Contains HTTP method (GET, POST, PUT,...</description>
        <pubDate>Sat, 04 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/http-https/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/http-https/</guid>
        
        <category>http</category>
        
        <category>https</category>
        
        <category>ssl</category>
        
        <category>security</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding DNS - How Domain Name System Works</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Let‚Äôs explore how DNS (Domain Name System) works, from basic concepts to detailed operations.&lt;/p&gt; &lt;h3 id=&quot;-working-process&quot;&gt;üìù Working Process&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;User accesses website (www.a.com)&lt;/li&gt; &lt;li&gt;Computer checks local DNS cache&lt;/li&gt; &lt;li&gt;If not in cache, DNS query begins&lt;/li&gt; &lt;li&gt;Root DNS server IP address is obtained&lt;/li&gt; &lt;li&gt;Query sent to Root DNS for TLD server address&lt;/li&gt; &lt;li&gt;Query sent to TLD DNS for Authoritative DNS server address&lt;/li&gt; &lt;li&gt;Query sent to Authoritative DNS for IP address&lt;/li&gt; &lt;li&gt;IP address cached and returned to browser&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h3 id=&quot;-what-is-dns&quot;&gt;üîç What is DNS?&lt;/h3&gt; &lt;blockquote&gt; &lt;p&gt;DNS (Domain Name System) is a...</description>
        <pubDate>Fri, 03 Jan 2025 18:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/understanding-dns/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/understanding-dns/</guid>
        
        <category>dns</category>
        
        <category>cs</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>How Web Browsers Work</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Let‚Äôs explore how web browsers work internally, from the moment a user enters a URL until the page is displayed.&lt;/p&gt; &lt;h3 id=&quot;-summary&quot;&gt;üìù Summary&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;User accesses website through browser (www.a.com)&lt;/li&gt; &lt;li&gt;Browser identifies server‚Äôs IP address through DNS&lt;/li&gt; &lt;li&gt;Browser and server perform 3-Way Handshake&lt;/li&gt; &lt;li&gt;Browser sends HTTP Request to server&lt;/li&gt; &lt;li&gt;Server sends HTTP Response to browser&lt;/li&gt; &lt;li&gt;Browser parses HTML to create DOM Tree&lt;/li&gt; &lt;li&gt;Upon encountering Style tags, pauses DOM creation to parse CSS and create CSSOM Tree&lt;/li&gt; &lt;li&gt;When encountering script tags, passes control to JavaScript engine to parse and create AST&lt;/li&gt; &lt;li&gt;Creates Render Tree...</description>
        <pubDate>Fri, 03 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/web-browser-work/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/web-browser-work/</guid>
        
        <category>browser</category>
        
        <category>web</category>
        
        <category>networking</category>
        
        <category>rendering</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Understanding OSI 7 Layers and TCP/IP 4 Layers</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;-overview&quot;&gt;üéØ Overview&lt;/h2&gt; &lt;p&gt;Let‚Äôs explore the OSI 7 Layer model and TCP/IP 4 Layer model, understanding their structures and differences.&lt;/p&gt; &lt;h3 id=&quot;-osi-7-layers&quot;&gt;üåê OSI 7 Layers&lt;/h3&gt; &lt;h4 id=&quot;-what-is-osi&quot;&gt;üìù What is OSI?&lt;/h4&gt; &lt;p&gt;The OSI (Open Systems Interconnection) model is a reference model for network protocol stacks developed by ISO (International Organization for Standardization).&lt;/p&gt; &lt;h4 id=&quot;-layer-structure&quot;&gt;üîç Layer Structure&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;üî∂ OSI Model (7 Layers):&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Application (üîó):&lt;/strong&gt; Interfaces with the user and provides network services (HTTP, FTP).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Presentation (üé®):&lt;/strong&gt; Formats and encrypts data for the application layer.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Session (üóÇÔ∏è):&lt;/strong&gt; Manages sessions and connections between devices.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Transport (üì§):&lt;/strong&gt; Ensures reliable data...</description>
        <pubDate>Thu, 02 Jan 2025 21:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/cs/osi-layer/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/cs/osi-layer/</guid>
        
        <category>cs</category>
        
        <category>osi</category>
        
        <category>tcp/ip</category>
        
        <category>protocols</category>
        
        <category>network</category>
        
        <category>CS</category>
      </item>
    
      <item>
        <title>Welcome to My DevOps Journey</title>
        <description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;welcome-to-my-devops-journey&quot;&gt;Welcome to My DevOps Journey&lt;/h2&gt; &lt;blockquote&gt; &lt;p&gt;As a DevOps engineer, I‚Äôve had the opportunity to work with various modern technologies and practices. In this blog, I‚Äôll be sharing my experiences and insights about:&lt;/p&gt; &lt;/blockquote&gt; &lt;h3 id=&quot;cloud-service-providers-csp&quot;&gt;Cloud Service Providers (CSP)&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;AWS architecture and services&lt;/li&gt; &lt;li&gt;Google Cloud Platform (GCP) implementations&lt;/li&gt; &lt;li&gt;Multi-cloud strategies and best practices&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;cicd--automation&quot;&gt;CI/CD &amp;amp; Automation&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;GitHub Actions workflows and custom actions&lt;/li&gt; &lt;li&gt;GitLab CI pipeline optimization&lt;/li&gt; &lt;li&gt;Jenkins automation&lt;/li&gt; &lt;li&gt;ArgoCD and Flux for GitOps&lt;/li&gt; &lt;li&gt;Infrastructure as Code (IaC) with Terraform, Ansible, and Pulumi&lt;/li&gt; &lt;li&gt;Custom automation tools and scripts&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;container--orchestration&quot;&gt;Container &amp;amp;...</description>
        <pubDate>Thu, 02 Jan 2025 01:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/devops/welcome-to-my-devops-journey/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/devops/welcome-to-my-devops-journey/</guid>
        
        <category>devops</category>
        
        <category>DEVOPS</category>
      </item>
    
      <item>
        <title>Grammar Post</title>
        <description>&lt;p&gt;Among companions born from great hardship and challenges, ridiculous situations will be born. &lt;em&gt;I strive to be as brave as a lion.&lt;/em&gt; Carefully designed decorations are more attractive than random placements. A balanced structure is more effective than chaos. Complete focus leads to better outcomes.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Take control of your time effectively. Don‚Äôt let anxiety take over your mind. Stay strong and steady.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;The gateway to success is built on great foundations. Solid structure leads to powerful results. Confidence grows from consistent effort.&lt;/p&gt; &lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h2&gt; &lt;p&gt;HTML defines a long list of available inline tags, a complete list...</description>
        <pubDate>Wed, 01 Jan 2025 21:00:00 +0900</pubDate>
        <link>https://somaz94.github.io/category/etc/grammar/</link>
        <guid isPermaLink="true">https://somaz94.github.io/category/etc/grammar/</guid>
        
        <category>grammar</category>
        
        <category>ETC</category>
      </item>
    
  </channel>
</rss>
